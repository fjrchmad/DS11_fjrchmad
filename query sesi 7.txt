SELECT current_date
select current_time 
select current_timestamp 

select extract (hour from current_timestamp)
select extract (year from current_timestamp)
select extract (month from current_timestamp)
select extract (week from current_timestamp)
select extract (minute from current_timestamp)

select extract (minute from '2022-12-20 11:58:21' ::timestamp)
select to_char(current_timestamp, 'Month') as "Month" 
select date_trunc('week', current_timestamp)
select date_trunc('month', current_timestamp)
select date_trunc('quarter', current_timestamp)

select current_timestamp - '2021-11-01 13:20:58'
select current_timestamp::date - '2021-11-01 13:20:58'
select current_timestamp::date - '2021-11-01 13:20:58'::date

select current_timestamp + interval '30 days'
select current_timestamp + interval '1 day 3 hours'

select * from datasource_sql_ds11.customer
select id, email, gender, city from datasource_sql_ds11.customer

select
	c.id,
	c.email,
	c.gender,
	c.city,
	s.type ,
	p.id,
	p.price,
	t.quantity ,
	p.price * t.quantity as total,
	t.created_at 
from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 

select id as nomor
from datasource_sql_ds11.customer
where email <> 'Gmail'

union all 

select id as hahaha 
from datasource_sql_ds11.customer
where email = 'Gmail'

select id as nomor, gender
from datasource_sql_ds11.customer
where email <> 'Gmail'

union all 

select id, gender 
from datasource_sql_ds11.customer
where email = 'Gmail'

select id as nomor, email 
from datasource_sql_ds11.customer
where email <> 'Gmail'

union all 

select customer_id , null 
from datasource_sql_ds11."transaction" t 

select
	c.id,
	t.quantity
	from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 

select
	c.id,
	sum( t.quantity)
	from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
group by 1
order by 2 desc 
limit 10

select
	c.id,
	sum(t.quantity)/
	(select sum(t.quantity) from datasource_sql_ds11.transaction t)
	from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
group by 1
order by 2 desc 
limit 10

select sum(t.quantity) from datasource_sql_ds11.transaction t

select
	c.id,
	sum(t.quantity)::float/
	(select sum(t.quantity) from datasource_sql_ds11.transaction t) * 100
	from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
group by 1
order by 2 desc 
limit 10

select
	c.id,
	sum(t.quantity)::float
from datasource_sql_ds11.customer c
left join datasource_sql_ds11.transaction t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
where 
c.id in (select id from datasource_sql_ds11.customer c where email = 'Gmail')
group by 1
order by 2 desc 
limit 10

with
filtered_transactions as (
select * 
from datasource_sql_ds11."transaction" t 
where store_id =1
)
select
	c.id,
	sum(t.quantity)::float
from datasource_sql_ds11.customer c
left join filtered_transactions t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
where 
c.id in (select id from datasource_sql_ds11.customer c where email = 'Gmail')
group by 1
order by 2 desc 
limit 10

with
filtered_transactions as (
select * 
from datasource_sql_ds11."transaction" t 
where store_id =1
),
pool as ( select id from datasource_sql_ds11.customer where email = 'Gmail')
select
	c.id,
	sum(t.quantity)::float
from datasource_sql_ds11.customer c
left join filtered_transactions t on c.id = t.customer_id
left join datasource_sql_ds11.store s on t.store_id = s.id 
left join datasource_sql_ds11.product p on t.product_id = p.id 
where c.id in (select id from pool)
group by 1
order by 2 desc 
limit 10

windows function :
select 
row_number () over (partition by city order by id) as nomor,
	c.id,
	c.email,
	c.gender,
	c.city
from datasource_sql_ds11.customer c